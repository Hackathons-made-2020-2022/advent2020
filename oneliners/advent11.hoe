#!/bin/sh


hoe "
let
	rules ('L', 0)          = '#'
	rules ('#', n) | n >= 4 = 'L'
	rules (x  , _)          = x

	p m x = filter (\x -> x >= 0 && x < m) [pred x .. succ x]

	index (w,h) = [[ ((x,y), [(i,j) | j <- p h y, i <- p w x, (i,j)/=(x,y)]) | x<-[0.. pred w]] | y<-[0.. pred h]]

	foo l (x,y) = l !! y !! x

	bar = length . filter (== '#')
	baz
		= unlines
		.
		(\(is,l) -> map (map (rules . (foo l *** bar . map (foo l)))) is)
		.
		(index *** id)
		.
		((length . head &&& length) &&& id)
		.
		lines
in
length . filter (=='#') . snd . head . dropWhile (uncurry (/=)) . uncurry zip . (id &&& tail) . iterate baz
" # < advent11.input.small


# If a seat is empty (L) and there are no occupied seats adjacent to it, the seat becomes occupied.
# If a seat is occupied (#) and four or more seats adjacent to it are also occupied, the seat becomes empty.
# Otherwise, the seat's state does not change.


