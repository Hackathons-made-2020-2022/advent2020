#!/bin/sh

hoe2 '
let
mkRule r n = any (\(a,b) -> n >= a && n <= b) r
rules r x = none ($ x) (map mkRule r)
in
sum
.
(\(r,l) -> filter (rules r) l)
.
(
map (map ((head &&& last) . map (read @Int)) . filter ((==2) . length) . map (splitOn "-") . words) . head
&&&
concatMap (read @[Int] . (\x -> "["++x++"]")) . tail . last
)
.
splitOn [""]
'

